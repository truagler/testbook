{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vopro\\\\RiderProjects\\\\Library\\\\Library\\\\ClientApp\\\\src\\\\components\\\\FetchData.tsx\";\nimport React, { Component } from \"react\";\nimport { Mapper } from \"../mapper/Mapper\";\nimport { Genre } from \"../model/Genre\";\nimport { Language } from \"../language/Language\";\nimport { BookModal } from \"../modal/BookModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class FetchData extends Component {\n  constructor(props) {\n    super(props);\n\n    this.openModal = () => {\n      this.setState({\n        showModal: true\n      });\n    };\n\n    this.openAddModal = () => {\n      this.setState({\n        showModal: true,\n        book: {\n          id: 0,\n          name: \"\",\n          createdDate: new Date(),\n          genre: Genre.comedy,\n          author: \"\"\n        }\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState({\n        showModal: false\n      });\n    };\n\n    this.state = {\n      books: [],\n      showModal: false,\n      book: {\n        id: 0,\n        name: \"\",\n        createdDate: new Date(),\n        genre: Genre.comedy,\n        author: \"\"\n      },\n      ids: []\n    };\n  }\n\n  componentDidMount() {\n    this.getBooksData();\n  }\n\n  async getBooksData() {\n    const response = await fetch('getbooks');\n    const data = await response.json();\n    const books = Mapper.toBookViewModels(data);\n    this.setState({\n      books: books\n    });\n  }\n\n  async getBookData(id) {\n    const response = await fetch('getbook?id=' + id.toString());\n    const data = await response.json();\n    const book = Mapper.toBookViewModel(data);\n    this.setState({\n      book: book\n    });\n    this.openModal();\n  }\n\n  async removeBook(id) {\n    await fetch('removebook', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify(id)\n    });\n    await this.getBooksData();\n  }\n\n  async removeBooks(ids) {\n    if (ids.length == 0) return alert(\"Вы не выбрали что удалить\");\n    await fetch('removebooks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json;charset=utf-8'\n      },\n      body: JSON.stringify(ids)\n    });\n    this.state.ids.length = 0;\n    await this.getBooksData();\n  }\n\n  updateName(e) {\n    const checked = e.target.checked;\n    const id = Number(e.target.value);\n\n    if (!this.state.ids.includes(id) && checked) {\n      this.state.ids.push(id);\n    }\n\n    if (this.state.ids.includes(id) && !checked) {\n      let index = this.state.ids.indexOf(id);\n      this.state.ids.splice(index, 1);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"tabelLabel\",\n        children: \"\\u041A\\u043D\\u0438\\u0433\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.openAddModal(),\n          className: \"btn btn-success\",\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 16\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.removeBooks(this.state.ids),\n          className: \"btn btn-danger\",\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u043A\\u043D\\u0438\\u0433\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 105\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-striped\",\n        \"aria-labelledby\": \"tabelLabel\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0413\\u043E\\u0434\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0416\\u0430\\u043D\\u0440\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u0410\\u0432\\u0442\\u043E\\u0440\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.books.map(book => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: book.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              onClick: () => this.getBookData(book.id),\n              children: book.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: book.createdDate.toString().slice(0, 10)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Language.toGenre(book.genre)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: book.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.removeBook(book.id),\n                className: \"btn btn-danger\",\n                children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                onChange: e => this.updateName(e),\n                value: book.id,\n                type: \"checkbox\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this)]\n          }, book.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BookModal, {\n        hide: () => this.closeModal(),\n        isShown: this.state.showModal,\n        book: this.state.book,\n        getBooks: () => this.getBooksData()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this);\n  }\n\n}\nFetchData.displayName = FetchData.name;","map":{"version":3,"sources":["C:/Users/vopro/RiderProjects/Library/Library/ClientApp/src/components/FetchData.tsx"],"names":["React","Component","Mapper","Genre","Language","BookModal","FetchData","constructor","props","openModal","setState","showModal","openAddModal","book","id","name","createdDate","Date","genre","comedy","author","closeModal","state","books","ids","componentDidMount","getBooksData","response","fetch","data","json","toBookViewModels","getBookData","toString","toBookViewModel","removeBook","method","headers","body","JSON","stringify","removeBooks","length","alert","updateName","e","checked","target","Number","value","includes","push","index","indexOf","splice","render","map","slice","toGenre","displayName"],"mappings":";AAAA,OAAOA,KAAP,IAA4BC,SAA5B,QAA4C,OAA5C;AAEA,SAAQC,MAAR,QAAqB,kBAArB;AACA,SAAQC,KAAR,QAAoB,gBAApB;AACA,SAAQC,QAAR,QAAuB,sBAAvB;AACA,SAAQC,SAAR,QAAwB,oBAAxB;;AAYA,OAAO,MAAMC,SAAN,SAAwBL,SAAxB,CAAgD;AAGrDM,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;;AADsB,SAuExBC,SAvEwB,GAuEZ,MAAK;AACf,WAAKC,QAAL,CAAc;AAAGC,QAAAA,SAAS,EAAE;AAAd,OAAd;AACD,KAzEuB;;AAAA,SA0ExBC,YA1EwB,GA0ET,MAAK;AAClB,WAAKF,QAAL,CAAc;AAAGC,QAAAA,SAAS,EAAE,IAAd;AAAoBE,QAAAA,IAAI,EAAC;AAACC,UAAAA,EAAE,EAAE,CAAL;AAAQC,UAAAA,IAAI,EAAE,EAAd;AAAkBC,UAAAA,WAAW,EAAE,IAAIC,IAAJ,EAA/B;AAA2CC,UAAAA,KAAK,EAAEf,KAAK,CAACgB,MAAxD;AAAgEC,UAAAA,MAAM,EAAC;AAAvE;AAAzB,OAAd;AACD,KA5EuB;;AAAA,SA8ExBC,UA9EwB,GA8EX,MAAK;AAChB,WAAKX,QAAL,CAAc;AAAGC,QAAAA,SAAS,EAAE;AAAd,OAAd;AACD,KAhFuB;;AAEtB,SAAKW,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXZ,MAAAA,SAAS,EAAE,KAFA;AAGXE,MAAAA,IAAI,EAAC;AACHC,QAAAA,EAAE,EAAE,CADD;AAEHC,QAAAA,IAAI,EAAE,EAFH;AAGHC,QAAAA,WAAW,EAAE,IAAIC,IAAJ,EAHV;AAIHC,QAAAA,KAAK,EAAEf,KAAK,CAACgB,MAJV;AAKHC,QAAAA,MAAM,EAAE;AALL,OAHM;AAUXI,MAAAA,GAAG,EAAC;AAVO,KAAb;AAYD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,YAAL;AACD;;AAEiB,QAAZA,YAAY,GAAG;AACnB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,UAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,UAAMP,KAAsB,GAAGrB,MAAM,CAAC6B,gBAAP,CAAwBF,IAAxB,CAA/B;AACA,SAAKnB,QAAL,CAAc;AAAEa,MAAAA,KAAK,EAAEA;AAAT,KAAd;AACD;;AAEgB,QAAXS,WAAW,CAAClB,EAAD,EAAa;AAC5B,UAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAgBd,EAAE,CAACmB,QAAH,EAAjB,CAA5B;AACA,UAAMJ,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACA,UAAMjB,IAAI,GAAGX,MAAM,CAACgC,eAAP,CAAuBL,IAAvB,CAAb;AACA,SAAKnB,QAAL,CAAc;AAAEG,MAAAA,IAAI,EAAEA;AAAR,KAAd;AACA,SAAKJ,SAAL;AACD;;AAEe,QAAV0B,UAAU,CAACrB,EAAD,EAAa;AAC3B,UAAMc,KAAK,CAAC,YAAD,EAAe;AACxBQ,MAAAA,MAAM,EAAE,MADgB;AAExBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFe;AAKxBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe1B,EAAf;AALkB,KAAf,CAAX;AAOA,UAAM,KAAKY,YAAL,EAAN;AACD;;AAEgB,QAAXe,WAAW,CAACjB,GAAD,EAAgB;AAC/B,QAAGA,GAAG,CAACkB,MAAJ,IAAc,CAAjB,EAAoB,OAAOC,KAAK,CAAC,2BAAD,CAAZ;AACpB,UAAMf,KAAK,CAAC,aAAD,EAAgB;AACzBQ,MAAAA,MAAM,EAAE,MADiB;AAEzBC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFgB;AAKzBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAehB,GAAf;AALmB,KAAhB,CAAX;AAOA,SAAKF,KAAL,CAAWE,GAAX,CAAekB,MAAf,GAAwB,CAAxB;AACA,UAAM,KAAKhB,YAAL,EAAN;AACD;;AAEDkB,EAAAA,UAAU,CAACC,CAAD,EAAkC;AAC1C,UAAMC,OAAO,GAAGD,CAAC,CAACE,MAAF,CAASD,OAAzB;AACA,UAAMhC,EAAE,GAAGkC,MAAM,CAACH,CAAC,CAACE,MAAF,CAASE,KAAV,CAAjB;;AACA,QAAG,CAAC,KAAK3B,KAAL,CAAWE,GAAX,CAAe0B,QAAf,CAAwBpC,EAAxB,CAAD,IAAgCgC,OAAnC,EAA2C;AACzC,WAAKxB,KAAL,CAAWE,GAAX,CAAe2B,IAAf,CAAoBrC,EAApB;AACD;;AACD,QAAG,KAAKQ,KAAL,CAAWE,GAAX,CAAe0B,QAAf,CAAwBpC,EAAxB,KAA+B,CAACgC,OAAnC,EAA2C;AACzC,UAAIM,KAAK,GAAG,KAAK9B,KAAL,CAAWE,GAAX,CAAe6B,OAAf,CAAuBvC,EAAvB,CAAZ;AACA,WAAKQ,KAAL,CAAWE,GAAX,CAAe8B,MAAf,CAAsBF,KAAtB,EAA6B,CAA7B;AACD;AACF;;AAaDG,EAAAA,MAAM,GAAG;AAEP,wBACI;AAAA,8BACE;AAAI,QAAA,EAAE,EAAC,YAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCAAK;AAAQ,UAAA,OAAO,EAAE,MAAI,KAAK3C,YAAL,EAArB;AAA0C,UAAA,SAAS,EAAC,iBAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAL,oBAA8F;AAAQ,UAAA,OAAO,EAAE,MAAM,KAAK6B,WAAL,CAAiB,KAAKnB,KAAL,CAAWE,GAA5B,CAAvB;AAAyD,UAAA,SAAS,EAAC,gBAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA9F;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,QAAA,SAAS,EAAC,qBAAjB;AAAuC,2BAAgB,YAAvD;AAAA,gCACE;AAAA,iCACA;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF,eAME;AAAA;AAAA;AAAA;AAAA,oBANF,eAOE;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE;AAAA,oBACC,KAAKF,KAAL,CAAWC,KAAX,CAAiBiC,GAAjB,CAAqB3C,IAAI,iBACtB;AAAA,oCACE;AAAA,wBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAI,cAAA,OAAO,EAAE,MAAM,KAAKkB,WAAL,CAAiBnB,IAAI,CAACC,EAAtB,CAAnB;AAAA,wBAA+CD,IAAI,CAACE;AAApD;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA,wBAAKF,IAAI,CAACG,WAAL,CAAiBiB,QAAjB,GAA4BwB,KAA5B,CAAkC,CAAlC,EAAoC,EAApC;AAAL;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA,wBAAKrD,QAAQ,CAACsD,OAAT,CAAiB7C,IAAI,CAACK,KAAtB;AAAL;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA,wBAAKL,IAAI,CAACO;AAAV;AAAA;AAAA;AAAA;AAAA,oBALF,eAME;AAAA,qCAAI;AAAQ,gBAAA,OAAO,EAAE,MAAM,KAAKe,UAAL,CAAgBtB,IAAI,CAACC,EAArB,CAAvB;AAAiD,gBAAA,SAAS,EAAC,gBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBANF,eAOE;AAAA,qCAAI;AAAO,gBAAA,QAAQ,EAAG+B,CAAD,IAAO,KAAKD,UAAL,CAAgBC,CAAhB,CAAxB;AAA4C,gBAAA,KAAK,EAAEhC,IAAI,CAACC,EAAxD;AAA4D,gBAAA,IAAI,EAAC;AAAjE;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA,aAASD,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA,kBADH;AADD;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eA6BE,QAAC,SAAD;AAAW,QAAA,IAAI,EAAE,MAAM,KAAKO,UAAL,EAAvB;AAA0C,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWX,SAA9D;AAAyE,QAAA,IAAI,EAAE,KAAKW,KAAL,CAAWT,IAA1F;AAAgG,QAAA,QAAQ,EAAE,MAAM,KAAKa,YAAL;AAAhH;AAAA;AAAA;AAAA;AAAA,cA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiCD;;AAxHoD;AAA1CpB,S,CACJqD,W,GAAcrD,SAAS,CAACS,I","sourcesContent":["import React, {ChangeEvent, Component} from \"react\";\r\nimport {BookViewModel} from \"../model/BookViewModel\";\r\nimport {Mapper} from \"../mapper/Mapper\";\r\nimport {Genre} from \"../model/Genre\";\r\nimport {Language} from \"../language/Language\";\r\nimport {BookModal} from \"../modal/BookModal\";\r\n\r\n\r\nexport interface Props {}\r\n\r\ntype State = {\r\n  books:BookViewModel[];\r\n  showModal:boolean;\r\n  book: BookViewModel;\r\n  ids: number[];\r\n}\r\n\r\nexport class FetchData extends Component<Props, State> {\r\n  static displayName = FetchData.name;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      books: [],\r\n      showModal: false,\r\n      book:{\r\n        id: 0,\r\n        name: \"\",\r\n        createdDate: new Date(),\r\n        genre: Genre.comedy,\r\n        author: \"\"\r\n      },\r\n      ids:[]\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getBooksData();\r\n  }\r\n\r\n  async getBooksData() {\r\n    const response = await fetch('getbooks');\r\n    const data = await response.json();\r\n    const books: BookViewModel[] = Mapper.toBookViewModels(data)\r\n    this.setState({ books: books});\r\n  }\r\n\r\n  async getBookData(id: number) {\r\n    const response = await fetch('getbook?id=' + id.toString());\r\n    const data = await response.json();\r\n    const book = Mapper.toBookViewModel(data)\r\n    this.setState({ book: book});\r\n    this.openModal();\r\n  }\r\n\r\n  async removeBook(id: number) {\r\n    await fetch('removebook', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8'\r\n      },\r\n      body: JSON.stringify(id)\r\n    });\r\n    await this.getBooksData();\r\n  }\r\n\r\n  async removeBooks(ids: number[]) {\r\n    if(ids.length == 0) return alert(\"Вы не выбрали что удалить\")\r\n    await fetch('removebooks', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8'\r\n      },\r\n      body: JSON.stringify(ids)\r\n    });\r\n    this.state.ids.length = 0;\r\n    await this.getBooksData();\r\n  }\r\n\r\n  updateName(e:ChangeEvent<HTMLInputElement>) {\r\n    const checked = e.target.checked;\r\n    const id = Number(e.target.value);\r\n    if(!this.state.ids.includes(id) && checked){\r\n      this.state.ids.push(id);\r\n    }\r\n    if(this.state.ids.includes(id) && !checked){\r\n      let index = this.state.ids.indexOf(id);\r\n      this.state.ids.splice(index, 1)\r\n    }\r\n  }\r\n  \r\n  openModal = () =>{\r\n    this.setState({  showModal: true});\r\n  }  \r\n  openAddModal = () =>{\r\n    this.setState({  showModal: true, book:{id: 0, name: \"\", createdDate: new Date(), genre: Genre.comedy, author:\"\"}});\r\n  }\r\n\r\n  closeModal = () =>{\r\n    this.setState({  showModal: false});\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n        <div>\r\n          <h1 id=\"tabelLabel\">Книги</h1>\r\n          <div><button onClick={()=>this.openAddModal()} className=\"btn btn-success\" >Добавить</button> <button onClick={() => this.removeBooks(this.state.ids)} className=\"btn btn-danger\">Удалить книги</button></div>\r\n          <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n            <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Название</th>\r\n              <th>Год</th>\r\n              <th>Жанр</th>\r\n              <th>Автор</th>\r\n              <th></th>\r\n              <th></th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {this.state.books.map(book =>\r\n                <tr key={book.id}>\r\n                  <td>{book.id}</td>\r\n                  <td onClick={() => this.getBookData(book.id)}>{book.name}</td>\r\n                  <td>{book.createdDate.toString().slice(0,10)}</td>\r\n                  <td>{Language.toGenre(book.genre)}</td>\r\n                  <td>{book.author}</td>\r\n                  <td><button onClick={() => this.removeBook(book.id)} className=\"btn btn-danger\">Удалить</button></td>\r\n                  <td><input onChange={(e) => this.updateName(e)} value={book.id} type=\"checkbox\"/></td>\r\n                </tr>\r\n            )}\r\n            </tbody>\r\n          </table>\r\n          <BookModal hide={() => this.closeModal()} isShown={this.state.showModal} book={this.state.book} getBooks={() => this.getBooksData()}/>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}