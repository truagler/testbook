[{"C:\\Users\\vopro\\RiderProjects\\Library\\testbook\\Library\\ClientApp\\src\\index.js":"1","C:\\Users\\vopro\\RiderProjects\\Library\\testbook\\Library\\ClientApp\\src\\App.js":"2","C:\\Users\\vopro\\RiderProjects\\Library\\testbook\\Library\\ClientApp\\src\\registerServiceWorker.js":"3","C:\\Users\\vopro\\RiderProjects\\Library\\testbook\\Library\\ClientApp\\src\\components\\Layout.js":"4","C:\\Users\\vopro\\RiderProjects\\Library\\testbook\\Library\\ClientApp\\src\\components\\FetchData.tsx":"5","C:\\Users\\vopro\\RiderProjects\\Library\\testbook\\Library\\ClientApp\\src\\components\\NavMenu.js":"6","C:\\Users\\vopro\\RiderProjects\\Library\\testbook\\Library\\ClientApp\\src\\language\\Language.ts":"7","C:\\Users\\vopro\\RiderProjects\\Library\\testbook\\Library\\ClientApp\\src\\mapper\\Mapper.ts":"8","C:\\Users\\vopro\\RiderProjects\\Library\\testbook\\Library\\ClientApp\\src\\model\\Genre.ts":"9","C:\\Users\\vopro\\RiderProjects\\Library\\testbook\\Library\\ClientApp\\src\\modal\\BookModal.tsx":"10","C:\\Users\\vopro\\RiderProjects\\Library\\testbook\\Library\\ClientApp\\src\\model\\BookViewModel.ts":"11","C:\\Users\\vopro\\RiderProjects\\Library\\testbook\\Library\\ClientApp\\src\\model\\BookBlank.ts":"12"},{"size":521,"mtime":1653549438377,"results":"13","hashOfConfig":"14"},{"size":457,"mtime":1653822984841,"results":"15","hashOfConfig":"14"},{"size":4121,"mtime":1653549438391,"results":"16","hashOfConfig":"14"},{"size":352,"mtime":1653573658034,"results":"17","hashOfConfig":"14"},{"size":4241,"mtime":1653565785755,"results":"18","hashOfConfig":"14"},{"size":1289,"mtime":1653573658020,"results":"19","hashOfConfig":"14"},{"size":358,"mtime":1653551306117,"results":"20","hashOfConfig":"14"},{"size":346,"mtime":1653551304051,"results":"21","hashOfConfig":"14"},{"size":80,"mtime":1653551300839,"results":"22","hashOfConfig":"14"},{"size":3681,"mtime":1653565989237,"results":"23","hashOfConfig":"14"},{"size":403,"mtime":1653551299744,"results":"24","hashOfConfig":"14"},{"size":398,"mtime":1653551299111,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"co7g68",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"C:\\Users\\vopro\\RiderProjects\\Library\\testbook\\Library\\ClientApp\\src\\index.js",[],["57","58","59"],"C:\\Users\\vopro\\RiderProjects\\Library\\testbook\\Library\\ClientApp\\src\\App.js",[],"C:\\Users\\vopro\\RiderProjects\\Library\\testbook\\Library\\ClientApp\\src\\registerServiceWorker.js",[],"C:\\Users\\vopro\\RiderProjects\\Library\\testbook\\Library\\ClientApp\\src\\components\\Layout.js",["60"],"import React, { Component } from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport { NavMenu } from './NavMenu';\r\n\r\nexport class Layout extends Component {\r\n  static displayName = Layout.name;\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <Container>\r\n          {this.props.children}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\vopro\\RiderProjects\\Library\\testbook\\Library\\ClientApp\\src\\components\\FetchData.tsx",["61"],"import React, {ChangeEvent, Component} from \"react\";\r\nimport {BookViewModel} from \"../model/BookViewModel\";\r\nimport {Mapper} from \"../mapper/Mapper\";\r\nimport {Genre} from \"../model/Genre\";\r\nimport {Language} from \"../language/Language\";\r\nimport {BookModal} from \"../modal/BookModal\";\r\n\r\n\r\nexport interface Props {}\r\n\r\ntype State = {\r\n  books:BookViewModel[];\r\n  showModal:boolean;\r\n  book: BookViewModel;\r\n  ids: number[];\r\n}\r\n\r\nexport class FetchData extends Component<Props, State> {\r\n  static displayName = FetchData.name;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      books: [],\r\n      showModal: false,\r\n      book:{\r\n        id: 0,\r\n        name: \"\",\r\n        createdDate: new Date(),\r\n        genre: Genre.comedy,\r\n        author: \"\"\r\n      },\r\n      ids:[]\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getBooksData();\r\n  }\r\n\r\n  async getBooksData() {\r\n    const response = await fetch('getbooks');\r\n    const data = await response.json();\r\n    const books: BookViewModel[] = Mapper.toBookViewModels(data)\r\n    this.setState({ books: books});\r\n  }\r\n\r\n  async getBookData(id: number) {\r\n    const response = await fetch('getbook?id=' + id.toString());\r\n    const data = await response.json();\r\n    const book = Mapper.toBookViewModel(data)\r\n    this.setState({ book: book});\r\n    this.openModal();\r\n  }\r\n\r\n  async removeBook(id: number) {\r\n    await fetch('removebook', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8'\r\n      },\r\n      body: JSON.stringify(id)\r\n    });\r\n    await this.getBooksData();\r\n  }\r\n\r\n  async removeBooks(ids: number[]) {\r\n    if(ids.length == 0) return alert(\"Вы не выбрали что удалить\")\r\n    await fetch('removebooks', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json;charset=utf-8'\r\n      },\r\n      body: JSON.stringify(ids)\r\n    });\r\n    this.state.ids.length = 0;\r\n    await this.getBooksData();\r\n  }\r\n\r\n  updateName(e:ChangeEvent<HTMLInputElement>) {\r\n    const checked = e.target.checked;\r\n    const id = Number(e.target.value);\r\n    if(!this.state.ids.includes(id) && checked){\r\n      this.state.ids.push(id);\r\n    }\r\n    if(this.state.ids.includes(id) && !checked){\r\n      let index = this.state.ids.indexOf(id);\r\n      this.state.ids.splice(index, 1)\r\n    }\r\n  }\r\n  \r\n  openModal = () =>{\r\n    this.setState({  showModal: true});\r\n  }  \r\n  openAddModal = () =>{\r\n    this.setState({  showModal: true, book:{id: 0, name: \"\", createdDate: new Date(), genre: Genre.comedy, author:\"\"}});\r\n  }\r\n\r\n  closeModal = () =>{\r\n    this.setState({  showModal: false});\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n        <div>\r\n          <h1 id=\"tabelLabel\">Книги</h1>\r\n          <div><button onClick={()=>this.openAddModal()} className=\"btn btn-success\" >Добавить</button> <button onClick={() => this.removeBooks(this.state.ids)} className=\"btn btn-danger\">Удалить книги</button></div>\r\n          <table className='table table-striped' aria-labelledby=\"tabelLabel\">\r\n            <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Название</th>\r\n              <th>Год</th>\r\n              <th>Жанр</th>\r\n              <th>Автор</th>\r\n              <th></th>\r\n              <th></th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {this.state.books.map(book =>\r\n                <tr key={book.id}>\r\n                  <td>{book.id}</td>\r\n                  <td onClick={() => this.getBookData(book.id)}>{book.name}</td>\r\n                  <td>{book.createdDate.toString().slice(0,10)}</td>\r\n                  <td>{Language.toGenre(book.genre)}</td>\r\n                  <td>{book.author}</td>\r\n                  <td><button onClick={() => this.removeBook(book.id)} className=\"btn btn-danger\">Удалить</button></td>\r\n                  <td><input onChange={(e) => this.updateName(e)} value={book.id} type=\"checkbox\"/></td>\r\n                </tr>\r\n            )}\r\n            </tbody>\r\n          </table>\r\n          <BookModal hide={() => this.closeModal()} isShown={this.state.showModal} book={this.state.book} getBooks={() => this.getBooksData()}/>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n",["62","63","64"],"C:\\Users\\vopro\\RiderProjects\\Library\\testbook\\Library\\ClientApp\\src\\components\\NavMenu.js",["65","66","67","68","69","70","71","72","73"],"import React, { Component } from 'react';\r\nimport { Collapse, Container, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavMenu.css';\r\n\r\nexport class NavMenu extends Component {\r\n  static displayName = NavMenu.name;\r\n\r\n  constructor (props) {\r\n    super(props);\r\n\r\n    this.toggleNavbar = this.toggleNavbar.bind(this);\r\n    this.state = {\r\n      collapsed: true\r\n    };\r\n  }\r\n\r\n  toggleNavbar () {\r\n    this.setState({\r\n      collapsed: !this.state.collapsed\r\n    });\r\n  }\r\n\r\n // render () {\r\n //   return (\r\n //     <header>\r\n //       <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\r\n //         <Container>\r\n //           <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n //           <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!this.state.collapsed} navbar>\r\n //             <ul className=\"navbar-nav flex-grow\">\r\n //               <NavItem>\r\n //                 <NavLink tag={Link} className=\"text-dark\" to=\"/fetch-data\">Fetch data</NavLink>\r\n //               </NavItem>\r\n //             </ul>\r\n //           </Collapse>\r\n //         </Container>\r\n //       </Navbar>\r\n //     </header>\r\n //   );\r\n // }\r\n}\r\n","C:\\Users\\vopro\\RiderProjects\\Library\\testbook\\Library\\ClientApp\\src\\language\\Language.ts",["74","75","76","77"],"import {Genre} from \"../model/Genre\";\r\n\r\nexport class Language{\r\n\tstatic toGenre(genre: Genre){\r\n\t\tswitch (genre){\r\n\t\t\tcase Genre.detective: return \"Детектив\"\r\n\t\t\t\tbreak;\r\n\t\t\tcase Genre.comedy: return \"Комедия\"\r\n\t\t\t\tbreak;\r\n\t\t\tcase Genre.horror: return \"Ужасы\"\r\n\t\t\t\tbreak;\r\n\t\t\tcase Genre.prose: return \"Проза\"\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n}","C:\\Users\\vopro\\RiderProjects\\Library\\testbook\\Library\\ClientApp\\src\\mapper\\Mapper.ts",[],"C:\\Users\\vopro\\RiderProjects\\Library\\testbook\\Library\\ClientApp\\src\\model\\Genre.ts",[],"C:\\Users\\vopro\\RiderProjects\\Library\\testbook\\Library\\ClientApp\\src\\modal\\BookModal.tsx",["78","79","80","81"],"import React, {ChangeEvent, Component} from \"react\";\r\nimport {Modal, ModalBody, ModalFooter, ModalHeader} from \"reactstrap\";\r\nimport {BookViewModel} from \"../model/BookViewModel\";\r\nimport {BookBlank} from \"../model/BookBlank\";\r\nimport {Genre} from \"../model/Genre\";\r\nimport {Language} from \"../language/Language\";\r\n\r\nexport interface Props{\r\n\tisShown: boolean;\r\n\thide: () => void;\r\n\tbook: BookViewModel;\r\n\tgetBooks: () => void;\r\n}\r\n\r\ntype State = {\r\n\tname: string;\r\n\tcreatedDate: Date;\r\n\tgenre: Genre.comedy;\r\n\tauthor: string;\r\n}\r\n\r\nexport class BookModal extends Component<Props, State>{\r\n\r\n\tconstructor(props:any) {\r\n\t\tsuper(props);\r\n\t\t\r\n\t\tthis.state = {\r\n\t\t\t\tname: \"\",\r\n\t\t\t\tcreatedDate: new Date(),\r\n\t\t\t\tgenre: Genre.comedy,\r\n\t\t\t\tauthor: \"\"\r\n\t\t}\r\n\t}\r\n\r\n\tupdateName(e:ChangeEvent<HTMLInputElement>) {\r\n\t\tconst name = e.target.value;\r\n\t\tthis.setState({name: name});\r\n\t}\r\n\r\n\tupdateGenre(e:ChangeEvent<HTMLSelectElement>) {\r\n\t\tconst genre = Number(e.target.value);\r\n\t\tthis.setState({genre: genre});\r\n\t}\r\n\r\n\tupdateAuthor(e:ChangeEvent<HTMLInputElement>) {\r\n\t\tconst author = e.target.value;\r\n\t\tthis.setState({author: author});\r\n\t}\r\n\r\n\tupdateDate(e:ChangeEvent<HTMLDataElement>) {\r\n\t\tconst value = e.target.value;\r\n\t\tconst date =new Date(Date.parse(value));\r\n\t\tthis.setState({createdDate: date})\r\n\t}\r\n\t\r\n\tasync updateBook() {\r\n\t\tif(this.state.name == \"\" || this.state.author) return alert(\"Вы не заполнили все поля\")\r\n\t\tconst blank = new BookBlank(this.props.book.id, this.state.name, this.state.createdDate, this.state.genre, this.state.author)\r\n\t\tawait fetch('updatebook', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json;charset=utf-8'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(blank)\r\n\t\t});\r\n\t\tthis.props.hide();\r\n\t\tthis.props.getBooks();\r\n\t}\r\n\r\n\tasync addBook() {\r\n\t\tconst blank = new BookBlank(0, this.state.name, this.state.createdDate, this.state.genre, this.state.author)\r\n\t\tawait fetch('addbook', {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json;charset=utf-8'\r\n\t\t\t},\r\n\t\t\tbody: JSON.stringify(blank)\r\n\t\t});\r\n\t\tthis.props.hide();\r\n\t\tthis.props.getBooks();\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tvar valueArray = Object.values(Genre);\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Modal size=\"lg\"\r\n\t\t\t\t\t   aria-labelledby=\"contained-modal-title-vcenter\"\r\n\t\t\t\t\t   isOpen={this.props.isShown}\r\n\t\t\t\t\t   fade={false}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ModalHeader>\r\n\t\t\t\t\t\t<h1>{this.props.book.id != 0 ? \"Форма редактирования книги: \"+ this.props.book.name : \"Форма добавления книги\"}</h1>\r\n\t\t\t\t\t</ModalHeader>\r\n\t\t\t\t\t<ModalBody>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<b>Наименование: </b><input onChange={(e) => this.updateName(e)} type=\"text\" defaultValue={this.props.book.name}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<b>Дата: </b><input onChange={(e) => this.updateDate(e)} type=\"date\"/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<b>Жанр: </b>\r\n\t\t\t\t\t\t\t<select defaultValue={this.props.book.genre} onChange={(e) => this.updateGenre(e)}>\r\n\t\t\t\t\t\t\t\t{valueArray.map((key, value) => <option value={value} key={key}>{Language.toGenre(value)}</option>)}\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<b>Автор: </b><input  onChange={(e) => this.updateAuthor(e)}  type=\"text\" defaultValue={this.props.book.author}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</ModalBody>\r\n\t\t\t\t\t<ModalFooter>\r\n\t\t\t\t\t\t<button onClick={this.props.book.id != 0 ? ()=> this.updateBook() : () => this.addBook()} className=\"btn btn-success\">{this.props.book.id != 0 ? \"Изменить\" : \"Добавить\"}</button>\r\n\t\t\t\t\t\t<button onClick={()=>this.props.hide()} className=\"btn btn-danger\">Закрыть</button>\r\n\t\t\t\t\t</ModalFooter>\r\n\t\t\t\t</Modal>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}","C:\\Users\\vopro\\RiderProjects\\Library\\testbook\\Library\\ClientApp\\src\\model\\BookViewModel.ts",[],"C:\\Users\\vopro\\RiderProjects\\Library\\testbook\\Library\\ClientApp\\src\\model\\BookBlank.ts",[],{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","severity":1,"message":"89","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":17},{"ruleId":"92","severity":1,"message":"93","line":68,"column":19,"nodeType":"94","messageId":"95","endLine":68,"endColumn":21},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"86","replacedBy":"96"},{"ruleId":"88","severity":1,"message":"97","line":1,"column":8,"nodeType":"90","messageId":"91","endLine":1,"endColumn":13},{"ruleId":"88","severity":1,"message":"98","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":18},{"ruleId":"88","severity":1,"message":"99","line":2,"column":20,"nodeType":"90","messageId":"91","endLine":2,"endColumn":29},{"ruleId":"88","severity":1,"message":"100","line":2,"column":31,"nodeType":"90","messageId":"91","endLine":2,"endColumn":37},{"ruleId":"88","severity":1,"message":"101","line":2,"column":39,"nodeType":"90","messageId":"91","endLine":2,"endColumn":50},{"ruleId":"88","severity":1,"message":"102","line":2,"column":52,"nodeType":"90","messageId":"91","endLine":2,"endColumn":65},{"ruleId":"88","severity":1,"message":"103","line":2,"column":67,"nodeType":"90","messageId":"91","endLine":2,"endColumn":74},{"ruleId":"88","severity":1,"message":"104","line":2,"column":76,"nodeType":"90","messageId":"91","endLine":2,"endColumn":83},{"ruleId":"88","severity":1,"message":"105","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":14},{"ruleId":"106","severity":1,"message":"107","line":7,"column":5,"nodeType":"108","messageId":"109","endLine":7,"endColumn":11},{"ruleId":"106","severity":1,"message":"107","line":9,"column":5,"nodeType":"108","messageId":"109","endLine":9,"endColumn":11},{"ruleId":"106","severity":1,"message":"107","line":11,"column":5,"nodeType":"108","messageId":"109","endLine":11,"endColumn":11},{"ruleId":"106","severity":1,"message":"107","line":13,"column":5,"nodeType":"108","messageId":"109","endLine":13,"endColumn":11},{"ruleId":"92","severity":1,"message":"93","line":57,"column":22,"nodeType":"94","messageId":"95","endLine":57,"endColumn":24},{"ruleId":"92","severity":1,"message":"110","line":94,"column":31,"nodeType":"94","messageId":"95","endLine":94,"endColumn":33},{"ruleId":"92","severity":1,"message":"110","line":114,"column":43,"nodeType":"94","messageId":"95","endLine":114,"endColumn":45},{"ruleId":"92","severity":1,"message":"110","line":114,"column":145,"nodeType":"94","messageId":"95","endLine":114,"endColumn":147},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"jsx-a11y/accessible-emoji",[],"no-unused-vars","'NavMenu' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",[],"'React' is defined but never used.","'Collapse' is defined but never used.","'Container' is defined but never used.","'Navbar' is defined but never used.","'NavbarBrand' is defined but never used.","'NavbarToggler' is defined but never used.","'NavItem' is defined but never used.","'NavLink' is defined but never used.","'Link' is defined but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]